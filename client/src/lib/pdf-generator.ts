import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import { Athlete, CombineMetric } from '@shared/schema';

/**
 * Generates a PDF profile for an athlete
 * @param athlete The athlete data
 * @param metrics Optional combine metrics data
 * @returns Promise<string> URL to the generated PDF
 */
export async function generateAthletePDF(
  athlete: Athlete, 
  metrics?: CombineMetric[], 
  academicData?: any
): Promise<string> {
  const pdf = new jsPDF({
    orientation: 'portrait',
    unit: 'mm',
    format: 'a4'
  });
  
  // PDF Generation Settings
  const pageWidth = pdf.internal.pageSize.getWidth();
  const margin = 20;
  const contentWidth = pageWidth - (margin * 2);
  
  // Add header with logo and title
  pdf.setFillColor(0, 84, 240); // Blue color
  pdf.rect(0, 0, pageWidth, 30, 'F');
  
  pdf.setTextColor(255, 255, 255);
  pdf.setFont('helvetica', 'bold');
  pdf.setFontSize(18);
  pdf.text('GridIron LegacyAI - Player Profile', pageWidth / 2, 15, { align: 'center' });
  
  pdf.setTextColor(0, 0, 0);
  pdf.setFontSize(22);
  pdf.text(`${athlete.firstName} ${athlete.lastName}`, pageWidth / 2, 40, { align: 'center' });
  
  pdf.setFontSize(14);
  pdf.setFont('helvetica', 'normal');
  pdf.text(`Position: ${athlete.position}`, pageWidth / 2, 50, { align: 'center' });
  
  if (athlete.school) {
    pdf.text(`School: ${athlete.school}`, pageWidth / 2, 58, { align: 'center' });
  }
  
  if (athlete.graduationYear) {
    pdf.text(`Class of ${athlete.graduationYear}`, pageWidth / 2, 66, { align: 'center' });
  }
  
  // Physical Stats
  pdf.setFont('helvetica', 'bold');
  pdf.setFontSize(16);
  pdf.text('Physical Stats', margin, 80);
  pdf.setDrawColor(0, 84, 240);
  pdf.setLineWidth(0.5);
  pdf.line(margin, 82, pageWidth - margin, 82);
  
  pdf.setFont('helvetica', 'normal');
  pdf.setFontSize(12);
  let yPos = 90;
  
  if (athlete.height) {
    pdf.text(`Height: ${athlete.height}`, margin, yPos);
    yPos += 8;
  }
  
  if (athlete.weight) {
    pdf.text(`Weight: ${athlete.weight} lbs`, margin, yPos);
    yPos += 8;
  }
  
  // Combine Metrics
  if (metrics && metrics.length > 0) {
    const latestMetrics = metrics[0];
    
    pdf.setFont('helvetica', 'bold');
    pdf.setFontSize(16);
    pdf.text('Combine Metrics', margin, yPos + 8);
    pdf.setLineWidth(0.5);
    pdf.line(margin, yPos + 10, pageWidth - margin, yPos + 10);
    
    pdf.setFont('helvetica', 'normal');
    pdf.setFontSize(12);
    yPos += 20;
    
    if (latestMetrics.fortyYard) {
      pdf.text(`40-Yard Dash: ${latestMetrics.fortyYard} sec`, margin, yPos);
      yPos += 8;
    }
    
    if (latestMetrics.shuttle) {
      pdf.text(`Shuttle: ${latestMetrics.shuttle} sec`, margin, yPos);
      yPos += 8;
    }
    
    if (latestMetrics.verticalJump) {
      pdf.text(`Vertical Jump: ${latestMetrics.verticalJump} in`, margin, yPos);
      yPos += 8;
    }
    
    if (latestMetrics.broadJump) {
      pdf.text(`Broad Jump: ${latestMetrics.broadJump} in`, margin, yPos);
      yPos += 8;
    }
    
    if (latestMetrics.benchPress) {
      pdf.text(`Bench Press: ${latestMetrics.benchPress} reps`, margin, yPos);
      yPos += 8;
    }
  }
  
  // Academic Information
  pdf.setFont('helvetica', 'bold');
  pdf.setFontSize(16);
  pdf.text('Academic Information', margin, yPos + 8);
  pdf.setLineWidth(0.5);
  pdf.line(margin, yPos + 10, pageWidth - margin, yPos + 10);
  
  pdf.setFont('helvetica', 'normal');
  pdf.setFontSize(12);
  yPos += 20;
  
  if (athlete.gpa) {
    pdf.text(`GPA: ${athlete.gpa}`, margin, yPos);
    yPos += 8;
  }
  
  if (athlete.actScore) {
    pdf.text(`ACT Score: ${athlete.actScore}`, margin, yPos);
    yPos += 8;
  }
  
  // Contact Information
  pdf.setFont('helvetica', 'bold');
  pdf.setFontSize(16);
  pdf.text('Contact Information', margin, yPos + 8);
  pdf.setLineWidth(0.5);
  pdf.line(margin, yPos + 10, pageWidth - margin, yPos + 10);
  
  pdf.setFont('helvetica', 'normal');
  pdf.setFontSize(12);
  yPos += 20;
  
  // Add footer with links
  pdf.setFillColor(240, 240, 240);
  pdf.rect(0, pdf.internal.pageSize.getHeight() - 25, pageWidth, 25, 'F');
  
  pdf.setFont('helvetica', 'italic');
  pdf.setFontSize(10);
  pdf.setTextColor(100, 100, 100);
  pdf.text(
    'Generated by GridIron LegacyAI - The Ultimate Football Performance & Recruiting Platform',
    pageWidth / 2, 
    pdf.internal.pageSize.getHeight() - 15, 
    { align: 'center' }
  );
  
  if (athlete.hudlLink) {
    pdf.setTextColor(0, 84, 240);
    pdf.text('View Hudl Highlights', pageWidth / 2, pdf.internal.pageSize.getHeight() - 8, { align: 'center' });
  }
  
  // Generate PDF and return
  const pdfBlob = pdf.output('blob');
  return URL.createObjectURL(pdfBlob);
}